// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Myproject.Models.DBConnection;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Myproject.Migrations
{
    [DbContext(typeof(ConString))]
    [Migration("20240821102359_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Myproject.Models.EntityClasses.Dictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("Type")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Dictionary", "config");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SUCCES",
                            Description = "Succes"
                        },
                        new
                        {
                            Id = 2,
                            Code = "TECHNICAL_ERROR",
                            Description = "Something wrong"
                        },
                        new
                        {
                            Id = 3,
                            Code = "USER_ALREADY_EXIST",
                            Description = "Username already in use, choser another"
                        },
                        new
                        {
                            Id = 4,
                            Code = "NO_RECORD",
                            Description = "No Data"
                        },
                        new
                        {
                            Id = 5,
                            Code = "USER_NOT_EXIST",
                            Description = "User not found"
                        });
                });

            modelBuilder.Entity("Myproject.Models.EntityClasses.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiName")
                        .HasColumnType("text");

                    b.Property<string>("Request")
                        .HasColumnType("text");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("api_request", "log");
                });

            modelBuilder.Entity("Myproject.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", "auth");
                });
#pragma warning restore 612, 618
        }
    }
}
